"""empty message

Revision ID: 90743fc38783
Revises: 
Create Date: 2024-10-27 22:32:59.950591

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '90743fc38783'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('allows_write', sa.Boolean(), nullable=True),
    sa.Column('language_code', sa.String(length=16), nullable=True),
    sa.Column('username', sa.String(length=32), nullable=True),
    sa.Column('last_name', sa.String(length=128), nullable=True),
    sa.Column('first_name', sa.String(length=128), nullable=True),
    sa.Column('avatar', sa.String(length=128), nullable=True),
    sa.Column('join_at', sa.DateTime(), nullable=True),
    sa.Column('last_visit', sa.DateTime(), nullable=True),
    sa.Column('banned', sa.Boolean(), nullable=True),
    sa.Column('balance', sa.Integer(), nullable=True),
    sa.Column('wallet', sa.String(length=253), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('join_tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('url', sa.String(length=253), nullable=True),
    sa.Column('checks', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('expire', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invitation', sa.String(length=16), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('player_limit', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('started', sa.Boolean(), nullable=True),
    sa.Column('bet', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('checks_count', sa.Integer(), nullable=True),
    sa.Column('last_check', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['join_tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('is_owner', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('join_at', sa.DateTime(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('steps',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('must_play', sa.Boolean(), nullable=True),
    sa.Column('tray_updated', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('bolt', sa.Boolean(), nullable=True),
    sa.Column('stage', sa.Integer(), nullable=True),
    sa.Column('expire', sa.DateTime(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('step_id', sa.Integer(), nullable=True),
    sa.Column('index', sa.Integer(), nullable=True),
    sa.Column('face', sa.Integer(), nullable=True),
    sa.Column('glb', sa.String(length=200), nullable=True),
    sa.Column('meta', sa.Text(), nullable=True),
    sa.Column('in_tray', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['step_id'], ['steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dices')
    op.drop_table('steps')
    op.drop_table('players')
    op.drop_table('tasks')
    op.drop_table('rooms')
    op.drop_table('join_tasks')
    op.drop_table('clients')
    # ### end Alembic commands ###
